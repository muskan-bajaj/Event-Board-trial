{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\webdev\\\\Event Board\\\\eventboard\\\\src\\\\Component\\\\Context\\\\NoticeContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NoticeContext = /*#__PURE__*/createContext();\nexport const noticeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_ALL_NOTICE':\n      return {\n        notices: action.payload\n      };\n    // case 'NEW_NOTICE':\n    //     return{\n    //         notices:[action.payload, ...state.notices]\n    //     }\n    default:\n      return state;\n  }\n};\n\n//children property contains the tag or page that\n//NoticeContextProvider wraps in index.js\n//in this case it is App.jsx\n\n//wrapping App with NoticeContext.Provider\nexport const NoticeContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //useReducer is similar to useState\n  //dispatch function is used to change the state value\n  const [state, dispatch] = useReducer(noticeReducer, {\n    notices: null\n  });\n\n  //arguement inside dispatch func is called ACTION\n  //dispatch({type:'SHOW_ALL_NOTICE',payload:[{},{}]})\n\n  return /*#__PURE__*/_jsxDEV(NoticeContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(NoticeContextProvider, \"ao6iY1GHE5wdlHngvM8TeyCtx5A=\");\n_c = NoticeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"NoticeContextProvider\");","map":{"version":3,"names":["createContext","useReducer","NoticeContext","noticeReducer","state","action","type","notices","payload","NoticeContextProvider","children","dispatch"],"sources":["C:/Users/KIIT/Desktop/webdev/Event Board/eventboard/src/Component/Context/NoticeContext.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const NoticeContext=createContext();\r\n\r\nexport const noticeReducer=(state,action)=>{\r\n    switch (action.type){\r\n        case 'SHOW_ALL_NOTICE':\r\n            return{\r\n                notices:action.payload\r\n            }\r\n        // case 'NEW_NOTICE':\r\n        //     return{\r\n        //         notices:[action.payload, ...state.notices]\r\n        //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//children property contains the tag or page that\r\n//NoticeContextProvider wraps in index.js\r\n//in this case it is App.jsx\r\n\r\n//wrapping App with NoticeContext.Provider\r\nexport const NoticeContextProvider=({children})=>{\r\n\r\n    //useReducer is similar to useState\r\n    //dispatch function is used to change the state value\r\n    const [state,dispatch]=useReducer(noticeReducer,{\r\n        notices:null\r\n    })\r\n\r\n    //arguement inside dispatch func is called ACTION\r\n    //dispatch({type:'SHOW_ALL_NOTICE',payload:[{},{}]})\r\n\r\n    return(\r\n        <NoticeContext.Provider value={{...state,dispatch}}>\r\n            {children}\r\n        </NoticeContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC;AAElD,OAAO,MAAMC,aAAa,gBAACF,aAAa,EAAE;AAE1C,OAAO,MAAMG,aAAa,GAAC,CAACC,KAAK,EAACC,MAAM,KAAG;EACvC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,iBAAiB;MAClB,OAAM;QACFC,OAAO,EAACF,MAAM,CAACG;MACnB,CAAC;IACL;IACA;IACA;IACA;IACA;MACI,OAAOJ,KAAK;EAAA;AAExB,CAAC;;AAED;AACA;AACA;;AAEA;AACA,OAAO,MAAMK,qBAAqB,GAAC,QAAc;EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC;EAE1C;EACA;EACA,MAAM,CAACN,KAAK,EAACO,QAAQ,CAAC,GAACV,UAAU,CAACE,aAAa,EAAC;IAC5CI,OAAO,EAAC;EACZ,CAAC,CAAC;;EAEF;EACA;;EAEA,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAC,GAAGH,KAAK;MAACO;IAAQ,CAAE;IAAA,UAC9CD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC,CAAC;AAAA,GAhBYD,qBAAqB;AAAA,KAArBA,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}